===============================
How to Use 1-my_list
===============================

Test the ability of making instant from class MyList
==========================

Importing function:
        >>> MyList = __import__('1-my_list').MyList

Checking for module docstring:
        >>> m = __import__("1-my_list").__doc__
        >>> len(m) > 1
        True

Checking for class docstring:
        >>> c = __import__("1-my_list").MyList.__doc__
        >>> len(c) > 1
        True

Checking for method docstring:
        >>> mod = __import__("1-my_list").MyList.print_sorted.__doc__
        >>> len(mod) > 1
        True

Checking for Type:
        >>> my_list = MyList()
        >>> type(my_list)
        <class '1-my_list.MyList'>


Checking for empty list:
        >>> l = MyList()
        >>> l.print()
        []


        >>> my_list = MyList([3])
        >>> print(my_list)
        [3]

::

        >>> my_list = MyList([3, 1, 7])
        >>> print(my_list)
        [3, 1, 7]

::

        >>> my_list = MyList(None)
        Traceback (most recent call last):
        ...
        TypeError: 'NoneType' object is not iterable

``print_sorted`` Method
=======================
Checking for empty list:
        >>> l = MyList()
        >>> l.print_sorted()
        []

Checking that appending works:
        >>> my_list = MyList()
        >>> my_list.append(1)
        >>> my_list.append(4)
        >>> my_list.append(2)
        >>> my_list.append(3)
        >>> my_list.append(5)
        >>> print(my_list)
        [1, 4, 2, 3, 5]

::
        Checking for list already in correct order:
        >>> my_list.print_sorted()
        [1, 2, 3, 4, 5]


Checking with negative numbers:
        >>> my_list = MyList()
        >>> my_list.append(-1)
        >>> my_list.append(-4)
        >>> my_list.append(-2)
        >>> my_list.append(-3)
        >>> my_list.append(-5)
        >>> print(my_list)
        [-5, -4, -3, -2, -1]
